{"version":3,"sources":["service-worker.js"],"names":[],"mappings":";AACA,MAAA,EAAA,WAEA,EAAA,CACA,YAGA,OAAA,KAAA,iBAAA,UAAA,IACA,QAAA,IAAA,kBACA,EAAA,UACA,OAAA,KAAA,GACA,KAAA,GAAA,EAAA,OAAA,GACA,KAAA,KACA,QAAA,IAAA,uBAEA,MAAA,IACA,QAAA,IAAA,+BAAA,QAKA,OAAA,KAAA,iBAAA,WAAA,IACA,QAAA,IAAA,mBACA,EAAA,UACA,OAAA,OAAA,KAAA,GAAA,QAAA,IACA,EAAA,IAAA,GACA,IAAA,GACA,OAAA,OAAA,SAQA,OAAA,KAAA,iBAAA,QAAA,IACA,QAAA,IAAA,gBACA,MAAA,QAAA,GAAA,EACA,EAAA,YACA,OAAA,MAAA,GACA,KAAA,GACA,GAGA,MAAA,GAAA,KAAA,IACA,MAAA,EAAA,EAAA,QAIA,OAHA,OAAA,KAAA,GAAA,KAAA,IACA,EAAA,IAAA,EAAA,KAEA","file":"service-worker.map","sourceRoot":"..\\src","sourcesContent":["/* eslint no-console: 0 */ // --> OFF\nconst cacheName = 'cache-v1'\n\nconst filesToCache = [\n  './app.js',\n]\n\nwindow.self.addEventListener('install', (event) => {\n  console.log('Event: Install')\n  event.waitUntil(\n    caches.open(cacheName)\n      .then(cache => cache.addAll(filesToCache)\n        .then(() => {\n          console.log('All files cached')\n        }))\n      .catch((error) => {\n        console.log('Error occured while caching ', error)\n      }),\n  )\n})\n\nwindow.self.addEventListener('activate', (event) => {\n  console.log('Event: Activate')\n  event.waitUntil(\n    caches.keys().then(cacheNames => Promise.all(\n      cacheNames.map((cache) => {\n        if (cache !== cacheName) {\n          return caches.delete(cache)\n        }\n        return false\n      }),\n    )),\n  )\n})\n\nwindow.self.addEventListener('fetch', (event) => {\n  console.log('Event: Fetch')\n  const { request } = event\n  event.respondWith(\n    caches.match(request)\n      .then((response) => {\n        if (response) {\n          return response\n        }\n        return fetch(request).then((res) => {\n          const responseToCache = res.clone()\n          caches.open(cacheName).then((cache) => {\n            cache.put(request, responseToCache)\n          })\n          return response\n        })\n      }),\n  )\n})\n"]}